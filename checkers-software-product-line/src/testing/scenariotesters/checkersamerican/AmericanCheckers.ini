[validRegularMove1]
boardSetUp=validRegularMoveBoard1
playerMove=5,7>4,6
turn=black

[validRegularMove2]
boardSetUp=validRegularMoveBoard1
playerMove=7,1>6,2
turn=black

[validRegularMove3]
boardSetUp=validRegularMoveBoard1
playerMove=2,4>1,3
turn=white


[validJumpMove1]
boardSetUp=validJumpMoveBoard1
playerMove=5,3>7,5
turn=black

[validJumpMove2]
boardSetUp=validJumpMoveBoard1
playerMove=6,6>4,4
turn=black

[validJumpMove3]
boardSetUp=validJumpMoveBoard1
playerMove=6,4>4,2
turn=white

[validJumpMove4]
boardSetUp=validJumpMoveBoard4
playerMove=1,3>3,5
turn=white

[validJumpMoveBoard4]
4,6=black-pawn
2,4=black-pawn
1,3=white-king

[validJumpMove5]
boardSetUp=validJumpMoveBoard5
playerMove=4,4>2,2
turn=white

[validJumpMoveBoard5]
4,4=white-pawn
3,3=black-pawn
1,1=white-pawn
3,1=black-pawn

[validJumpMove9]
boardSetUp=validJumpMoveBoard9
turn=white
playerMove=1,3>3,5

[validJumpMoveBoard9]
0,4=white-pawn
2,4=black-pawn
1,3=white-king
0,2=black-pawn
2,2=black-pawn
3,1=black-pawn

[invalidSourceCoordinateForMoveEmpty1]
boardSetUp=validRegularMoveBoard1
playerMove=3,3>4,4
turn=white

[invalidSourceCoordinateForMoveEmpty2]
boardSetUp=validJumpMoveBoard1
playerMove=3,3>4,4
turn=black

[invalidSourceCoordinateForMoveOpponentsPiece1]
boardSetUp=validRegularMoveBoard1
playerMove=5,3>6,4
turn=white

[invalidSourceCoordinateForMoveOpponentsPiece2]
boardSetUp=validJumpMoveBoard1
playerMove=5,3>7,5
turn=white

;TODO Add a possible jump move. Most of the tests fail in message step.
[validRegularMoveBoard1]
3,5=white-pawn
2,4=white-pawn
5,3=black-pawn
5,7=black-king
7,1=black-pawn

[validJumpMoveBoard1]
5,3=black-pawn
6,6=black-king
6,4=white-pawn
5,5=white-king

[invalidJumpMoveJumpingOverOwnPiece1]
boardSetUp=invalidJumpMoveBoard1
playerMove=7,5>5,7
turn=black

[invalidJumpMoveBoard1]
7,5=black-pawn
6,6=black-king

[invalidSourceCoordinateForMoveUnplayableColor1]
boardSetUp=invalidJumpMoveBoard1
playerMove=6,5>5,6
turn=black

[invalidSourceCoordinateForMoveOutsideBorders1]
boardSetUp=invalidJumpMoveBoard1
playerMove=8,8>7,7
turn=black

[invalidDestinationCoordinateForMoveOutsideBorders1]
boardSetUp=validRegularMoveBoard1
playerMove=7,1>8,2
turn=black

[invalidDestinationCoordinateForMoveUnplayableColor1]
boardSetUp=validRegularMoveBoard1
playerMove=7,1>6,1
turn=black

[invalidDestinationCoordinateForMoveOccupied1]
boardSetUp=validRegularMoveBoard1
playerMove=3,5>2,4
turn=white

[invalidDestinationCoordinateForMoveUnallowedDirection1]
boardSetUp=validRegularMoveBoard1
playerMove=5,3>4,2
turn=black

[invalidDestinationCoordinateForMoveTooFarAway1]
boardSetUp=validRegularMoveBoard1
playerMove=5,3>2,6
turn=black

[invalidDestinationCoordinateForMoveNotOneOfTheJumpMoves1]
boardSetUp=validJumpMoveBoard1
playerMove=5,5>4,4
turn=white

[invalidDestinationCoordinateForMoveJumpedPieceIsOwnPiece1]
boardSetUp=validRegularMoveBoard1
playerMove=3,5>1,3
turn=white

[invalidDestinationCoordinateForMoveJumpedPieceIsNull1]
boardSetUp=validRegularMoveBoard1
playerMove=2,4>0,2
turn=white

[crowningTheEligiblePiece1]
boardSetUp=crowningTheEligiblePieceBoard1
playerMove=3,5>5,7
turn=black

[crowningTheEligiblePiece2]
boardSetUp=crowningTheEligiblePieceBoard2
playerMove=6,6>7,7
turn=black

[crowningTheEligiblePiece3]
boardSetUp=crowningTheEligiblePieceBoard1
playerMove=0,2>2,0
turn=white

[crowningTheEligiblePiece4]
boardSetUp=crowningTheEligiblePieceBoard2
playerMove=5,1>4,0
turn=white

[crowningTheEligiblePieceBoard1]
3,5=black-pawn
4,6=white-king
6,6=black-pawn
0,2=white-pawn
1,1=black-pawn
5,1=white-pawn
3,1=black-pawn

[crowningTheEligiblePieceBoard2]
5,1=white-pawn
6,6=black-pawn

[endOfTheGame1]
boardSetUp=endOfTheGameBoard1
playerMove=2,2>4,4
turn=black

[endOfTheGame2]
boardSetUp=endOfTheGameBoard2
playerMove=1,5>3,7
turn=black

[endOfTheGameInDrawBothPlayersHaveOnePiece1]
boardSetUp=endOfTheGameBoard1
playerMove=3,3>1,1
turn=white

[endOfTheGameInDrawBothPlayersHaveOnePiece2]
boardSetUp=endOfTheGameInDrawBothPlayersHaveOnePieceBoard2
playerMove=3,3>1,1
turn=white

[validJumpMove17]
boardSetUp=validJumpMoveBoard17
playerMove=3,3>1,1
turn=white

[validJumpMoveBoard17]
2,2=black-pawn
3,3=white-pawn
0,2=black-king

[endOfTheGameInDrawBothPlayersHaveOnePieceBoard2]
2,2=black-pawn
3,3=white-pawn
0,2=black-pawn

[endOfTheGameBoard1]
2,2=black-pawn
3,3=white-pawn
6,2=black-pawn

[endOfTheGameBoard2]
1,5=black-pawn
2,6=white-pawn

[endOfTheGameOpponentCantMakeAValidMove1]
boardSetUp=endOfTheGameOpponentCantMakeAValidMoveBoard1
playerMove=3,3>5,5
turn=black

[endOfTheGameOpponentCantMakeAValidMove2]
boardSetUp=endOfTheGameOpponentCantMakeAValidMoveBoard2
turn=black
playerMove=3,1>2,0

[endOfTheGameOpponentCantMakeAValidMoveBoard1]
7,7=white-pawn
6,6=black-pawn
4,4=white-pawn
3,3=black-pawn

[endOfTheGameOpponentCantMakeAValidMoveBoard2]
0,0=black-pawn
3,1=black-king
1,1=white-pawn
0,2=white-pawn
2,2=black-pawn

[validRegularMove4]
boardSetUp=validRegularMoveBoard4
playerMove=4,0>3,1
turn=black


[validRegularMoveBoard4]
1,3=white-king
0,2=black-pawn
2,2=black-pawn
4,0=black-pawn
0,4=white-pawn
2,4=black-pawn


[validRegularMove5]
boardSetUp=validRegularMoveBoard5
playerMove=4,0>5,1
turn=black

[validRegularMoveBoard5]
1,3=white-pawn
0,2=black-pawn
2,2=black-pawn
4,0=black-pawn
0,4=white-pawn
2,4=black-pawn

[validRegularMove6]
boardSetUp=validRegularMoveBoard6
turn=black
playerMove=2,0>3,1

[validRegularMoveBoard6]
2,0=black-pawn
7,7=white-pawn
6,6=black-pawn

;next turn other
[validJumpMove10]
boardSetUp=validRegularMoveBoard6
turn=white
playerMove=7,7>5,5

[usefulBoard1]
3,1=black-pawn
5,1=black-pawn
0,2=white-king
2,2=white-pawn
1,3=black-pawn
5,3=white-pawn
4,4=black-pawn
1,5=white-pawn
5,5=white-pawn
4,6=black-king
7,7=white-pawn

[validJumpMove6]
boardSetUp=usefulBoard1
turn=black
playerMove=4,4>6,6

[validJumpMove7]
boardSetUp=usefulBoard1
turn=black
playerMove=4,6>6,4

[validJumpMove8]
boardSetUp=usefulBoard1
turn=white
playerMove=0,2>2,4

[invalidSourceCoordinateForMoveOpponentsPiece3]
boardSetUp=usefulBoard1
turn=white
playerMove=1,3>2,4

[invalidSourceCoordinateForMoveEmpty3]
boardSetUp=usefulBoard1
turn=black
playerMove=3,3>2,4

[invalidSourceCoordinateForMoveUnplayableColor2]
boardSetUp=usefulBoard1
turn=black
playerMove=3,4>2,5

[invalidSourceCoordinateForMoveOutsideBorders2]
boardSetUp=usefulBoard1
turn=black
playerMove=8,8>7,7

[invalidDestinationCoordinateForMoveOutsideBorders2]
boardSetUp=usefulBoard1
turn=white
playerMove=7,7>8,8

[invalidDestinationCoordinateForMoveUnallowedDirection2]
boardSetUp=usefulBoard1
turn=white
playerMove=5,3>3,5

[invalidDestinationCoordinateForMoveUnallowedDirection3]
boardSetUp=usefulBoard1
turn=white
playerMove=5,3>6,4

;Same as source == Occupied
[invalidDestinationCoordinateForMoveOccupied2]
boardSetUp=usefulBoard1
turn=white
playerMove=5,3>5,3

[invalidDestinationCoordinateForMoveOccupied3]
boardSetUp=usefulBoard1
turn=black
playerMove=3,1>1,3

[invalidDestinationCoordinateForMoveNotOneOfTheJumpMoves2]
boardSetUp=usefulBoard1
turn=white
playerMove=5,5>6,4

;Jumped piece is null == Not one of possible jump moves
[invalidDestinationCoordinateForMoveNotOneOfTheJumpMoves3]
boardSetUp=usefulBoard1
turn=white
playerMove=5,3>7,1

[invalidDestinationCoordinateForMoveUnplayableColor2]
boardSetUp=usefulBoard1
turn=white
playerMove=5,3>5,2

[invalidDestinationCoordinateForMoveTooFarAway2]
boardSetUp=usefulBoard1
turn=black
playerMove=3,1>6,4

[crowningTheEligiblePiece5]
boardSetUp=usefulBoard1
turn=white
playerMove=2,2>4,0

[endOfTheGameInDrawFortyMovesWithoutBecomingking1]
boardSetUp=validRegularMoveBoard1
turn=black
playerMove=7,1>6,2
extras=noPromote39



[endOfTheGameInDrawFortyMovesWithoutBecomingking2]
boardSetUp=endOfTheGameInDrawFortyMovesWithoutBecomingkingBoard2
turn=black
playerMove=0,2>1,3


[endOfTheGameInDrawFortyMovesWithoutBecomingkingBoard2]
0,6=black-pawn
0,2=black-pawn
;6,6=white-pawn

;The following valid jump moves test whether game thinks it's a draw when the rules are on edge.

;The game should not end. No piece got promoted but a piece is captured.
[validJumpMove11]
boardSetUp=validJumpMoveBoard11
turn=black
playerMove=7,1>5,3
extras=noPromote-39

[validJumpMove12]
boardSetUp=validJumpMoveBoard11
turn=black
playerMove=7,1>5,3
extras=noCapture-39

[validJumpMove13]
boardSetUp=validJumpMoveBoard11
turn=black
playerMove=7,1>5,3
extras=noPromote-45

[validJumpMove14]
boardSetUp=validJumpMoveBoard11
turn=black
playerMove=7,1>5,3
extras=noCapture-45

[validJumpMoveBoard11]
7,1=black-pawn
6,2=white-pawn
2,4=white-pawn
0,2=white-pawn
1,1=black-pawn
7,5=black-pawn

[crowningTheEligiblePiece6]
boardSetUp=crowningTheEligiblePieceBoard6
turn=black
playerMove=2,6>3,7
extras=noPromote-39,noCapture-39

[crowningTheEligiblePiece7]
boardSetUp=crowningTheEligiblePieceBoard6
turn=black
playerMove=2,6>3,7
extras=noPromote-45

[crowningTheEligiblePiece8]
boardSetUp=crowningTheEligiblePieceBoard6
turn=black
playerMove=2,6>3,7
extras=noCapture-45

[crowningTheEligiblePieceBoard6]
2,6=black-pawn
7,1=black-king
2,4=white-pawn
0,2=white-pawn
1,1=black-pawn
7,5=black-pawn

[endOfTheGameInDrawFortyIndecisiveMoves1]
boardSetUp=crowningTheEligiblePieceBoard6
turn=black
playerMove=7,5>6,6
extras=noPromote-39,noCapture-39

[endOfTheGameInDrawFortyIndecisiveMoves2]
boardSetUp=crowningTheEligiblePieceBoard6
turn=black
playerMove=7,5>6,6
extras=noPromote-45,noCapture-39

[endOfTheGameInDrawFortyIndecisiveMoves3]
boardSetUp=crowningTheEligiblePieceBoard6
turn=black
playerMove=7,5>6,6
extras=noPromote-39,noCapture-45


[validJumpMove15]
boardSetUp=validJumpMoveBoard15
turn=black
playerMove=2,2>4,4

[validJumpMove16]
boardSetUp=validJumpMoveBoard15
turn=white
playerMove=0,2>2,0

[validJumpMoveBoard15]
2,2=black-king
3,3=white-pawn
5,3=white-pawn
6,2=white-pawn
0,2=white-king
1,1=black-pawn
3,1=black-pawn


[invalidDestinationCoordinateForMoveOppositeDirectionOfLastMove1]
boardSetUp=invalidDestinationCoordinateForMoveOppositeDirectionOfLastMoveBoard1
turn=black
priorMoveSequence=2,2>4,4
playerMove=4,4>3,3

[invalidDestinationCoordinateForMoveOppositeDirectionOfLastMoveBoard1]
2,2=black-king
3,3=white-pawn
5,3=white-pawn
0,2=white-king
1,1=black-pawn
3,1=black-pawn

[invalidSourceCoordinateForMoveDifferentThanLastMovesDestinationCoordinate1]
boardSetUp=invalidDestinationCoordinateForMoveOppositeDirectionOfLastMoveBoard1
turn=black
priorMoveSequence=2,2>4,4
playerMove=3,1>2,2



